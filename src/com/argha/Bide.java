/*
 * Copyright (C) 2016 Argha
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package com.argha;

import com.argha.Dialogs.Error;
import com.argha.Dialogs.Log_Box;
import com.argha.Dialogs.About;
import com.argha.Util.Batch_File;
import com.argha.Util.Source_File;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dialog;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;

/**
 *
 * @author Argha
 */
public class Bide extends javax.swing.JFrame {

    /**
     * Creates new form Bide
     */
    public Bide() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editor_panel = new JPanel();
        jScrollPane1 = new JScrollPane();
        editor_pane = new JEditorPane();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        short_new = new JButton();
        short_save_source = new JButton();
        short_save_bat = new JButton();
        short_run = new JButton();
        short_clear = new JButton();
        short_open = new JButton();
        project_name = new JTextField();
        menu_bar = new JMenuBar();
        file_menu = new JMenu();
        new_project = new JMenuItem();
        open_project = new JMenuItem();
        save_source = new JMenuItem();
        save_batch = new JMenuItem();
        run_batch = new JMenuItem();
        exit = new JMenuItem();
        help_menu = new JMenu();
        about = new JMenuItem();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("BIDE - (Batch Programming IDE)");
        setLocationByPlatform(true);
        setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setType(Type.UTILITY);

        editor_panel.setBackground(new Color(0, 153, 153));

        editor_pane.setBorder(null);
        jScrollPane1.setViewportView(editor_pane);

        jLabel1.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setText("PROJECT NAME");

        jLabel2.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new Color(255, 255, 255));
        jLabel2.setText("EDITOR");

        short_new.setBackground(new Color(255, 255, 255));
        short_new.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        short_new.setText("New");
        short_new.setBorderPainted(false);
        short_new.setFocusPainted(false);
        short_new.setFocusable(false);
        short_new.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                short_newActionPerformed(evt);
            }
        });

        short_save_source.setBackground(new Color(255, 255, 255));
        short_save_source.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        short_save_source.setText("Save Txt");
        short_save_source.setBorderPainted(false);
        short_save_source.setFocusPainted(false);
        short_save_source.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                short_save_sourceActionPerformed(evt);
            }
        });

        short_save_bat.setBackground(new Color(255, 255, 255));
        short_save_bat.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        short_save_bat.setText("Save Bat");
        short_save_bat.setBorderPainted(false);
        short_save_bat.setFocusPainted(false);
        short_save_bat.setFocusable(false);
        short_save_bat.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                short_save_batActionPerformed(evt);
            }
        });

        short_run.setBackground(new Color(255, 255, 255));
        short_run.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        short_run.setText("Run");
        short_run.setBorderPainted(false);
        short_run.setFocusPainted(false);
        short_run.setFocusable(false);
        short_run.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                short_runActionPerformed(evt);
            }
        });

        short_clear.setBackground(new Color(255, 255, 255));
        short_clear.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        short_clear.setText("Clear");
        short_clear.setBorderPainted(false);
        short_clear.setFocusPainted(false);
        short_clear.setFocusable(false);
        short_clear.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                short_clearActionPerformed(evt);
            }
        });

        short_open.setBackground(new Color(255, 255, 255));
        short_open.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        short_open.setText("Open");
        short_open.setBorderPainted(false);
        short_open.setFocusPainted(false);
        short_open.setFocusable(false);
        short_open.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                short_openActionPerformed(evt);
            }
        });

        project_name.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));

        GroupLayout editor_panelLayout = new GroupLayout(editor_panel);
        editor_panel.setLayout(editor_panelLayout);
        editor_panelLayout.setHorizontalGroup(editor_panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(editor_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editor_panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(editor_panelLayout.createSequentialGroup()
                        .addGroup(editor_panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(editor_panelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(project_name, GroupLayout.PREFERRED_SIZE, 253, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(short_new)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(short_run)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(short_open)
                                .addGap(2, 2, 2)
                                .addComponent(short_save_source)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(short_save_bat)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(short_clear))
                            .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        editor_panelLayout.setVerticalGroup(editor_panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(editor_panelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 374, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editor_panelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
                    .addComponent(project_name)
                    .addComponent(short_new)
                    .addComponent(short_run)
                    .addComponent(short_open)
                    .addComponent(short_save_source)
                    .addComponent(short_save_bat)
                    .addComponent(short_clear))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menu_bar.setBackground(new Color(0, 153, 153));
        menu_bar.setBorder(null);
        menu_bar.setForeground(new Color(255, 255, 255));

        file_menu.setBackground(new Color(0, 153, 153));
        file_menu.setBorder(null);
        file_menu.setForeground(new Color(255, 255, 255));
        file_menu.setText("File");
        file_menu.setBorderPainted(true);
        file_menu.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        file_menu.setFocusable(false);

        new_project.setBackground(new Color(0, 153, 153));
        new_project.setFont(new Font("Segoe UI", 1, 12)); // NOI18N
        new_project.setForeground(new Color(255, 255, 255));
        new_project.setText("New");
        new_project.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                new_projectActionPerformed(evt);
            }
        });
        file_menu.add(new_project);

        open_project.setBackground(new Color(0, 153, 153));
        open_project.setFont(new Font("Segoe UI", 1, 12)); // NOI18N
        open_project.setForeground(new Color(255, 255, 255));
        open_project.setText("Open");
        open_project.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                open_projectActionPerformed(evt);
            }
        });
        file_menu.add(open_project);

        save_source.setBackground(new Color(0, 153, 153));
        save_source.setFont(new Font("Segoe UI", 1, 12)); // NOI18N
        save_source.setForeground(new Color(255, 255, 255));
        save_source.setText("Save Text");
        save_source.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                save_sourceActionPerformed(evt);
            }
        });
        file_menu.add(save_source);

        save_batch.setBackground(new Color(0, 153, 153));
        save_batch.setFont(new Font("Segoe UI", 1, 12)); // NOI18N
        save_batch.setForeground(new Color(255, 255, 255));
        save_batch.setText("Save Bat");
        save_batch.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                save_batchActionPerformed(evt);
            }
        });
        file_menu.add(save_batch);

        run_batch.setBackground(new Color(0, 153, 153));
        run_batch.setFont(new Font("Segoe UI", 1, 12)); // NOI18N
        run_batch.setForeground(new Color(255, 255, 255));
        run_batch.setText("Run ");
        run_batch.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                run_batchActionPerformed(evt);
            }
        });
        file_menu.add(run_batch);

        exit.setBackground(new Color(0, 153, 153));
        exit.setFont(new Font("Segoe UI", 1, 12)); // NOI18N
        exit.setForeground(new Color(255, 255, 255));
        exit.setText("Exit");
        exit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file_menu.add(exit);

        menu_bar.add(file_menu);

        help_menu.setBackground(new Color(0, 153, 153));
        help_menu.setForeground(new Color(255, 255, 255));
        help_menu.setText("Help");
        help_menu.setBorderPainted(true);

        about.setBackground(new Color(0, 153, 153));
        about.setFont(new Font("Segoe UI", 1, 12)); // NOI18N
        about.setForeground(new Color(255, 255, 255));
        about.setText("About");
        about.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        help_menu.add(about);

        menu_bar.add(help_menu);

        setJMenuBar(menu_bar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(editor_panel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(editor_panel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void new_projectActionPerformed(ActionEvent evt) {//GEN-FIRST:event_new_projectActionPerformed
        New_M();
    }//GEN-LAST:event_new_projectActionPerformed

    private void open_projectActionPerformed(ActionEvent evt) {//GEN-FIRST:event_open_projectActionPerformed
        Open_M();
    }//GEN-LAST:event_open_projectActionPerformed

    private void save_sourceActionPerformed(ActionEvent evt) {//GEN-FIRST:event_save_sourceActionPerformed
        SaveSource_M();
    }//GEN-LAST:event_save_sourceActionPerformed

    private void save_batchActionPerformed(ActionEvent evt) {//GEN-FIRST:event_save_batchActionPerformed
        SaveBatch_M();
    }//GEN-LAST:event_save_batchActionPerformed

    private void run_batchActionPerformed(ActionEvent evt) {//GEN-FIRST:event_run_batchActionPerformed
        RunBatch_M();
    }//GEN-LAST:event_run_batchActionPerformed

    private void exitActionPerformed(ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        Exit_M();
    }//GEN-LAST:event_exitActionPerformed

    private void aboutActionPerformed(ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        About_M();
    }//GEN-LAST:event_aboutActionPerformed

    private void short_newActionPerformed(ActionEvent evt) {//GEN-FIRST:event_short_newActionPerformed
        New_M();
    }//GEN-LAST:event_short_newActionPerformed

    private void short_runActionPerformed(ActionEvent evt) {//GEN-FIRST:event_short_runActionPerformed
       RunBatch_M();
    }//GEN-LAST:event_short_runActionPerformed

    private void short_openActionPerformed(ActionEvent evt) {//GEN-FIRST:event_short_openActionPerformed
       Open_M();
    }//GEN-LAST:event_short_openActionPerformed

    private void short_save_sourceActionPerformed(ActionEvent evt) {//GEN-FIRST:event_short_save_sourceActionPerformed
        SaveSource_M();
    }//GEN-LAST:event_short_save_sourceActionPerformed

    private void short_save_batActionPerformed(ActionEvent evt) {//GEN-FIRST:event_short_save_batActionPerformed
        SaveBatch_M();
    }//GEN-LAST:event_short_save_batActionPerformed

    private void short_clearActionPerformed(ActionEvent evt) {//GEN-FIRST:event_short_clearActionPerformed
        Clear_M();
    }//GEN-LAST:event_short_clearActionPerformed
    
    /**
     * Methods From Here
     */
    Source_File s;
    Batch_File b;
    
    public void New_M ()
    {
       editor_pane.setText("");
       project_name.setText("");
    }
    
    public void Open_M ()
    {
        error.error_msg.setText("Error :- Open function has not implemented yet"
                + "\n"
                + "Fix :- Wait til the next update");
        error.show();
    }
    
    public void SaveSource_M ()
    {
        final String name, location, format, contents;
        
        name = project_name.getText();
        format = ".txt";
        location = "E:\\";
        contents = editor_pane.getText();
        
        final int lpn, lc;
        
        lpn = name.length();
        lc = contents.length();
        
        if (lc < 1 && lpn < 1){
            error.error_msg.setText("Error :- Project name field & Editor field is empty"+"\n"
                    + "Fix :- Project name field & Editor field should not be empty.");
            error.show();
        }
        
        else if (lpn < 1){
            error.error_msg.setText("Error :- Project name field is empty"+"\n"
                    + "Fix :- Project name field should not be empty.");
            error.show();
        }
        
        else if (lc < 1){
            error.error_msg.setText("Error :- Editor field is empty"+"\n"
                    + "Fix :- Editor field should not be empty.");
            error.show();
        }
        
        else if (lpn > 0 && lc > 0){
            s = new Source_File(location, name, format, contents);
        }
       
    }
    
    public void SaveBatch_M ()
    {
        final String name, location, format, contents;
        
        name = project_name.getText();
        format = ".bat";
        location = "E:\\";
        contents = editor_pane.getText();
        
        final int lpn, lc;
        
        lpn = name.length();
        lc = contents.length();
        
        if (lc < 1 && lpn < 1){
            error.error_msg.setText("Error :- Project name field & Editor field is empty"+"\n"
                    + "Fix :- Project name field & Editor field should not be empty.");
            error.show();
        }
        
        else if (lpn < 1){
            error.error_msg.setText("Error :- Project name field is empty"+"\n"
                    + "Fix :- Project name field should not be empty.");
            error.show();
        }
        
        else if (lc < 1){
            error.error_msg.setText("Error :- Editor field is empty"+"\n"
                    + "Fix :- Editor field should not be empty.");
            error.show();
        }
        
        else if (lpn > 0 && lc > 0){
            b = new Batch_File(location, name, format, contents);
        }
        
    }
    
    public void RunBatch_M ()
    {
         error.error_msg.setText("Error :- Run function has not implemented yet"
                + "\n"
                + "Fix :- Wait til the next update");
        error.show();
    }
    
    public void Exit_M ()
    {
        System.exit(0);
    }
    
    public void About_M ()
    {
        final About a = new About (new javax.swing.JFrame(), true);
        a.show(true);
    }
    
    public void Clear_M()
    {
        editor_pane.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Metal look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bide().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static JMenuItem about;
    public static JEditorPane editor_pane;
    public static JPanel editor_panel;
    public static JMenuItem exit;
    public static JMenu file_menu;
    public static JMenu help_menu;
    public static JLabel jLabel1;
    public static JLabel jLabel2;
    public static JScrollPane jScrollPane1;
    public static JMenuBar menu_bar;
    public static JMenuItem new_project;
    public static JMenuItem open_project;
    public static JTextField project_name;
    public static JMenuItem run_batch;
    public static JMenuItem save_batch;
    public static JMenuItem save_source;
    public static JButton short_clear;
    public static JButton short_new;
    public static JButton short_open;
    public static JButton short_run;
    public static JButton short_save_bat;
    public static JButton short_save_source;
    // End of variables declaration//GEN-END:variables

    Error error = new Error(new javax.swing.JFrame(), true);
    Log_Box log_box = new Log_Box(new javax.swing.JFrame(), true);
    
}
